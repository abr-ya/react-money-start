/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedDashboardLayoutRouteImport } from './routes/_authed/dashboard/_layout'
import { Route as AuthedDashboardLayoutIndexRouteImport } from './routes/_authed/dashboard/_layout.index'
import { Route as AuthedDashboardTransactionsLayoutRouteImport } from './routes/_authed/dashboard/transactions/_layout'
import { Route as AuthedDashboardTransactionsLayoutIndexRouteImport } from './routes/_authed/dashboard/transactions/_layout.index'
import { Route as AuthedDashboardTransactionsNewLayoutRouteImport } from './routes/_authed/dashboard/transactions/new/_layout'
import { Route as AuthedDashboardTransactionsIdLayoutRouteImport } from './routes/_authed/dashboard/transactions/$id/_layout'
import { Route as AuthedDashboardTransactionsNewLayoutIndexRouteImport } from './routes/_authed/dashboard/transactions/new/_layout.index'
import { Route as AuthedDashboardTransactionsIdLayoutIndexRouteImport } from './routes/_authed/dashboard/transactions/$id/_layout.index'

const AuthedDashboardRouteImport = createFileRoute('/_authed/dashboard')()
const AuthedDashboardTransactionsRouteImport = createFileRoute(
  '/_authed/dashboard/transactions',
)()
const AuthedDashboardTransactionsNewRouteImport = createFileRoute(
  '/_authed/dashboard/transactions/new',
)()
const AuthedDashboardTransactionsIdRouteImport = createFileRoute(
  '/_authed/dashboard/transactions/$id',
)()

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedDashboardRoute = AuthedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedDashboardTransactionsRoute =
  AuthedDashboardTransactionsRouteImport.update({
    id: '/transactions',
    path: '/transactions',
    getParentRoute: () => AuthedDashboardRoute,
  } as any)
const AuthedDashboardLayoutRoute = AuthedDashboardLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AuthedDashboardRoute,
} as any)
const AuthedDashboardTransactionsNewRoute =
  AuthedDashboardTransactionsNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => AuthedDashboardTransactionsRoute,
  } as any)
const AuthedDashboardTransactionsIdRoute =
  AuthedDashboardTransactionsIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => AuthedDashboardTransactionsRoute,
  } as any)
const AuthedDashboardLayoutIndexRoute =
  AuthedDashboardLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedDashboardLayoutRoute,
  } as any)
const AuthedDashboardTransactionsLayoutRoute =
  AuthedDashboardTransactionsLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => AuthedDashboardTransactionsRoute,
  } as any)
const AuthedDashboardTransactionsLayoutIndexRoute =
  AuthedDashboardTransactionsLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedDashboardTransactionsLayoutRoute,
  } as any)
const AuthedDashboardTransactionsNewLayoutRoute =
  AuthedDashboardTransactionsNewLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => AuthedDashboardTransactionsNewRoute,
  } as any)
const AuthedDashboardTransactionsIdLayoutRoute =
  AuthedDashboardTransactionsIdLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => AuthedDashboardTransactionsIdRoute,
  } as any)
const AuthedDashboardTransactionsNewLayoutIndexRoute =
  AuthedDashboardTransactionsNewLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedDashboardTransactionsNewLayoutRoute,
  } as any)
const AuthedDashboardTransactionsIdLayoutIndexRoute =
  AuthedDashboardTransactionsIdLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedDashboardTransactionsIdLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof AuthedDashboardLayoutRouteWithChildren
  '/dashboard/transactions': typeof AuthedDashboardTransactionsLayoutRouteWithChildren
  '/dashboard/': typeof AuthedDashboardLayoutIndexRoute
  '/dashboard/transactions/$id': typeof AuthedDashboardTransactionsIdLayoutRouteWithChildren
  '/dashboard/transactions/new': typeof AuthedDashboardTransactionsNewLayoutRouteWithChildren
  '/dashboard/transactions/': typeof AuthedDashboardTransactionsLayoutIndexRoute
  '/dashboard/transactions/$id/': typeof AuthedDashboardTransactionsIdLayoutIndexRoute
  '/dashboard/transactions/new/': typeof AuthedDashboardTransactionsNewLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof AuthedDashboardLayoutIndexRoute
  '/dashboard/transactions': typeof AuthedDashboardTransactionsLayoutIndexRoute
  '/dashboard/transactions/$id': typeof AuthedDashboardTransactionsIdLayoutIndexRoute
  '/dashboard/transactions/new': typeof AuthedDashboardTransactionsNewLayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/dashboard': typeof AuthedDashboardRouteWithChildren
  '/_authed/dashboard/_layout': typeof AuthedDashboardLayoutRouteWithChildren
  '/_authed/dashboard/transactions': typeof AuthedDashboardTransactionsRouteWithChildren
  '/_authed/dashboard/transactions/_layout': typeof AuthedDashboardTransactionsLayoutRouteWithChildren
  '/_authed/dashboard/_layout/': typeof AuthedDashboardLayoutIndexRoute
  '/_authed/dashboard/transactions/$id': typeof AuthedDashboardTransactionsIdRouteWithChildren
  '/_authed/dashboard/transactions/$id/_layout': typeof AuthedDashboardTransactionsIdLayoutRouteWithChildren
  '/_authed/dashboard/transactions/new': typeof AuthedDashboardTransactionsNewRouteWithChildren
  '/_authed/dashboard/transactions/new/_layout': typeof AuthedDashboardTransactionsNewLayoutRouteWithChildren
  '/_authed/dashboard/transactions/_layout/': typeof AuthedDashboardTransactionsLayoutIndexRoute
  '/_authed/dashboard/transactions/$id/_layout/': typeof AuthedDashboardTransactionsIdLayoutIndexRoute
  '/_authed/dashboard/transactions/new/_layout/': typeof AuthedDashboardTransactionsNewLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/transactions'
    | '/dashboard/'
    | '/dashboard/transactions/$id'
    | '/dashboard/transactions/new'
    | '/dashboard/transactions/'
    | '/dashboard/transactions/$id/'
    | '/dashboard/transactions/new/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/dashboard/transactions'
    | '/dashboard/transactions/$id'
    | '/dashboard/transactions/new'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/dashboard'
    | '/_authed/dashboard/_layout'
    | '/_authed/dashboard/transactions'
    | '/_authed/dashboard/transactions/_layout'
    | '/_authed/dashboard/_layout/'
    | '/_authed/dashboard/transactions/$id'
    | '/_authed/dashboard/transactions/$id/_layout'
    | '/_authed/dashboard/transactions/new'
    | '/_authed/dashboard/transactions/new/_layout'
    | '/_authed/dashboard/transactions/_layout/'
    | '/_authed/dashboard/transactions/$id/_layout/'
    | '/_authed/dashboard/transactions/new/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/dashboard/transactions': {
      id: '/_authed/dashboard/transactions'
      path: '/transactions'
      fullPath: '/dashboard/transactions'
      preLoaderRoute: typeof AuthedDashboardTransactionsRouteImport
      parentRoute: typeof AuthedDashboardRoute
    }
    '/_authed/dashboard/_layout': {
      id: '/_authed/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardLayoutRouteImport
      parentRoute: typeof AuthedDashboardRoute
    }
    '/_authed/dashboard/transactions/new': {
      id: '/_authed/dashboard/transactions/new'
      path: '/new'
      fullPath: '/dashboard/transactions/new'
      preLoaderRoute: typeof AuthedDashboardTransactionsNewRouteImport
      parentRoute: typeof AuthedDashboardTransactionsRoute
    }
    '/_authed/dashboard/transactions/$id': {
      id: '/_authed/dashboard/transactions/$id'
      path: '/$id'
      fullPath: '/dashboard/transactions/$id'
      preLoaderRoute: typeof AuthedDashboardTransactionsIdRouteImport
      parentRoute: typeof AuthedDashboardTransactionsRoute
    }
    '/_authed/dashboard/_layout/': {
      id: '/_authed/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthedDashboardLayoutIndexRouteImport
      parentRoute: typeof AuthedDashboardLayoutRoute
    }
    '/_authed/dashboard/transactions/_layout': {
      id: '/_authed/dashboard/transactions/_layout'
      path: '/transactions'
      fullPath: '/dashboard/transactions'
      preLoaderRoute: typeof AuthedDashboardTransactionsLayoutRouteImport
      parentRoute: typeof AuthedDashboardTransactionsRoute
    }
    '/_authed/dashboard/transactions/_layout/': {
      id: '/_authed/dashboard/transactions/_layout/'
      path: '/'
      fullPath: '/dashboard/transactions/'
      preLoaderRoute: typeof AuthedDashboardTransactionsLayoutIndexRouteImport
      parentRoute: typeof AuthedDashboardTransactionsLayoutRoute
    }
    '/_authed/dashboard/transactions/new/_layout': {
      id: '/_authed/dashboard/transactions/new/_layout'
      path: '/new'
      fullPath: '/dashboard/transactions/new'
      preLoaderRoute: typeof AuthedDashboardTransactionsNewLayoutRouteImport
      parentRoute: typeof AuthedDashboardTransactionsNewRoute
    }
    '/_authed/dashboard/transactions/$id/_layout': {
      id: '/_authed/dashboard/transactions/$id/_layout'
      path: '/$id'
      fullPath: '/dashboard/transactions/$id'
      preLoaderRoute: typeof AuthedDashboardTransactionsIdLayoutRouteImport
      parentRoute: typeof AuthedDashboardTransactionsIdRoute
    }
    '/_authed/dashboard/transactions/new/_layout/': {
      id: '/_authed/dashboard/transactions/new/_layout/'
      path: '/'
      fullPath: '/dashboard/transactions/new/'
      preLoaderRoute: typeof AuthedDashboardTransactionsNewLayoutIndexRouteImport
      parentRoute: typeof AuthedDashboardTransactionsNewLayoutRoute
    }
    '/_authed/dashboard/transactions/$id/_layout/': {
      id: '/_authed/dashboard/transactions/$id/_layout/'
      path: '/'
      fullPath: '/dashboard/transactions/$id/'
      preLoaderRoute: typeof AuthedDashboardTransactionsIdLayoutIndexRouteImport
      parentRoute: typeof AuthedDashboardTransactionsIdLayoutRoute
    }
  }
}

interface AuthedDashboardLayoutRouteChildren {
  AuthedDashboardLayoutIndexRoute: typeof AuthedDashboardLayoutIndexRoute
}

const AuthedDashboardLayoutRouteChildren: AuthedDashboardLayoutRouteChildren = {
  AuthedDashboardLayoutIndexRoute: AuthedDashboardLayoutIndexRoute,
}

const AuthedDashboardLayoutRouteWithChildren =
  AuthedDashboardLayoutRoute._addFileChildren(
    AuthedDashboardLayoutRouteChildren,
  )

interface AuthedDashboardTransactionsLayoutRouteChildren {
  AuthedDashboardTransactionsLayoutIndexRoute: typeof AuthedDashboardTransactionsLayoutIndexRoute
}

const AuthedDashboardTransactionsLayoutRouteChildren: AuthedDashboardTransactionsLayoutRouteChildren =
  {
    AuthedDashboardTransactionsLayoutIndexRoute:
      AuthedDashboardTransactionsLayoutIndexRoute,
  }

const AuthedDashboardTransactionsLayoutRouteWithChildren =
  AuthedDashboardTransactionsLayoutRoute._addFileChildren(
    AuthedDashboardTransactionsLayoutRouteChildren,
  )

interface AuthedDashboardTransactionsIdLayoutRouteChildren {
  AuthedDashboardTransactionsIdLayoutIndexRoute: typeof AuthedDashboardTransactionsIdLayoutIndexRoute
}

const AuthedDashboardTransactionsIdLayoutRouteChildren: AuthedDashboardTransactionsIdLayoutRouteChildren =
  {
    AuthedDashboardTransactionsIdLayoutIndexRoute:
      AuthedDashboardTransactionsIdLayoutIndexRoute,
  }

const AuthedDashboardTransactionsIdLayoutRouteWithChildren =
  AuthedDashboardTransactionsIdLayoutRoute._addFileChildren(
    AuthedDashboardTransactionsIdLayoutRouteChildren,
  )

interface AuthedDashboardTransactionsIdRouteChildren {
  AuthedDashboardTransactionsIdLayoutRoute: typeof AuthedDashboardTransactionsIdLayoutRouteWithChildren
}

const AuthedDashboardTransactionsIdRouteChildren: AuthedDashboardTransactionsIdRouteChildren =
  {
    AuthedDashboardTransactionsIdLayoutRoute:
      AuthedDashboardTransactionsIdLayoutRouteWithChildren,
  }

const AuthedDashboardTransactionsIdRouteWithChildren =
  AuthedDashboardTransactionsIdRoute._addFileChildren(
    AuthedDashboardTransactionsIdRouteChildren,
  )

interface AuthedDashboardTransactionsNewLayoutRouteChildren {
  AuthedDashboardTransactionsNewLayoutIndexRoute: typeof AuthedDashboardTransactionsNewLayoutIndexRoute
}

const AuthedDashboardTransactionsNewLayoutRouteChildren: AuthedDashboardTransactionsNewLayoutRouteChildren =
  {
    AuthedDashboardTransactionsNewLayoutIndexRoute:
      AuthedDashboardTransactionsNewLayoutIndexRoute,
  }

const AuthedDashboardTransactionsNewLayoutRouteWithChildren =
  AuthedDashboardTransactionsNewLayoutRoute._addFileChildren(
    AuthedDashboardTransactionsNewLayoutRouteChildren,
  )

interface AuthedDashboardTransactionsNewRouteChildren {
  AuthedDashboardTransactionsNewLayoutRoute: typeof AuthedDashboardTransactionsNewLayoutRouteWithChildren
}

const AuthedDashboardTransactionsNewRouteChildren: AuthedDashboardTransactionsNewRouteChildren =
  {
    AuthedDashboardTransactionsNewLayoutRoute:
      AuthedDashboardTransactionsNewLayoutRouteWithChildren,
  }

const AuthedDashboardTransactionsNewRouteWithChildren =
  AuthedDashboardTransactionsNewRoute._addFileChildren(
    AuthedDashboardTransactionsNewRouteChildren,
  )

interface AuthedDashboardTransactionsRouteChildren {
  AuthedDashboardTransactionsLayoutRoute: typeof AuthedDashboardTransactionsLayoutRouteWithChildren
  AuthedDashboardTransactionsIdRoute: typeof AuthedDashboardTransactionsIdRouteWithChildren
  AuthedDashboardTransactionsNewRoute: typeof AuthedDashboardTransactionsNewRouteWithChildren
}

const AuthedDashboardTransactionsRouteChildren: AuthedDashboardTransactionsRouteChildren =
  {
    AuthedDashboardTransactionsLayoutRoute:
      AuthedDashboardTransactionsLayoutRouteWithChildren,
    AuthedDashboardTransactionsIdRoute:
      AuthedDashboardTransactionsIdRouteWithChildren,
    AuthedDashboardTransactionsNewRoute:
      AuthedDashboardTransactionsNewRouteWithChildren,
  }

const AuthedDashboardTransactionsRouteWithChildren =
  AuthedDashboardTransactionsRoute._addFileChildren(
    AuthedDashboardTransactionsRouteChildren,
  )

interface AuthedDashboardRouteChildren {
  AuthedDashboardLayoutRoute: typeof AuthedDashboardLayoutRouteWithChildren
  AuthedDashboardTransactionsRoute: typeof AuthedDashboardTransactionsRouteWithChildren
}

const AuthedDashboardRouteChildren: AuthedDashboardRouteChildren = {
  AuthedDashboardLayoutRoute: AuthedDashboardLayoutRouteWithChildren,
  AuthedDashboardTransactionsRoute:
    AuthedDashboardTransactionsRouteWithChildren,
}

const AuthedDashboardRouteWithChildren = AuthedDashboardRoute._addFileChildren(
  AuthedDashboardRouteChildren,
)

interface AuthedRouteChildren {
  AuthedDashboardRoute: typeof AuthedDashboardRouteWithChildren
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedDashboardRoute: AuthedDashboardRouteWithChildren,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
